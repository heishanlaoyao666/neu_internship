---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Asus.
--- DateTime: 2022/6/6 15:18
---
local BaseGameScene = class("GameScene", function()
    return display.newScene("MainScene")
end)

local plain = require("src/app/models/pojo/Plain.lua"):new()
local bulletList = require("src/app/models/pojo/BulletList.lua"):new()
local enemyList = require("src/app/models/pojo/EnemyList.lua"):new()
---properties
BaseGameScene.name = "nicheng"
BaseGameScene.life = 20
BaseGameScene.score = 0
BaseGameScene.backGroundLocation = {back = "res/img_bg/img_bg_1.jpg"}
BaseGameScene.layerImageLocation = {
    life = "res/ui/battle/ui_life.png",
    score = "res/ui/battle/ui_score.png",
    pause = "res/ui/battle/uiPause.png",
    bmFont = "res/ui/battle/num_account.fnt"
}
BaseGameScene.frameCounter = 0
BaseGameScene.sound = {
    music = "res/sounds/bgMusic.ogg",
    buttonEffect = "res/sounds/buttonEffet.ogg",
    explodeEffect = "res/sounds/explodeEffect.ogg",
    fireEffect = "res/sounds/fireEffect.ogg",
    shipDestroyEffect = "res/sounds/shipDestroyEffect.ogg"
}
BaseGameScene.bulletList = bulletList
BaseGameScene.enemyList = enemyList
BaseGameScene.plain = plain
BaseGameScene.collisionManage = require("src/app/models/pojo/CollisionManage.lua"):new()
BaseGameScene.collisionManage:init(plain, bulletList, enemyList)
BaseGameScene.isEnd = false
---constructor
function BaseGameScene:ctor()
    audio.playBGMSync(self.sound.music, true)
    local width, height = display.width, display.height
    self:createBackground()
    self:createInforLayer()
    self:createGame()
    ---frame Listener
    self:addNodeEventListener(cc.NODE_ENTER_FRAME_EVENT, function()
        ---background rolled
        local back1 = self:getChildByName("backLayer"):getChildByName("back1")
        local back2 = self:getChildByName("backLayer"):getChildByName("back2")
        local nextFrameY= (back1:getPositionY() - 2) % height
        back1:setPosition(0, nextFrameY)
        back2:setPosition(0, nextFrameY)
        ---information update
        local inforLayer = self:getChildByName("inforLayer")
        local scoreValue = inforLayer:getChildByName("scoreValue")
        local lifeValue = inforLayer:getChildByName("lifeValue")
        scoreValue:setString(tostring(self.score))
        lifeValue:setString(tostring(self.life))
        ---game data update
        local gameLayer = self:getChildByName("gameLayer")
        --generate bullet
        if self.frameCounter % 12 == 11 and self.isEnd == false then
            local x, y = self.plain:getLocation()
            local removed, added = self.bulletList:add(x, y + 30)
            if removed then
                removed:removeSelf()
            end
            audio.playEffectSync(self.sound.fireEffect)
            gameLayer:addChild(added)
        end
        if self.frameCounter == 59 then
            local x, y = self.enemyList:getRandomX(), display.height + 50
            local removed, added = self.enemyList:add(x, y)
            if removed then
                removed:removeSelf()
            end
            gameLayer:addChild(added)
        end
        --collision manage
        self.collisionManage:empty()
        local booms, fireBooms, lifeReduce, scoreAdd =self.collisionManage:collisionDetect()
        self.life = self.life - lifeReduce
        self.score = self.score + scoreAdd
        for _, boom in ipairs(booms) do
            gameLayer:addChild(boom.sprite)
            boom:play()
            audio.playEffectSync(self.sound.explodeEffect)
        end
        if fireBooms then
            local fireBoom = require("src/app/models/pojo/fireBoom.lua"):new()
            self:addChild(fireBoom)
            fireBoom:play()
        end
        
        --update bullet status
        for ele in self.bulletList:iterator() do
            ele:move()
        end
        --update enemy status
        for enemy in self.enemyList:iterator() do
            enemy:move()
        end
        self.plain:move()
        self.frameCounter = (self.frameCounter + 1) % 60

        if self.life <= 0 and self.isEnd == false then
            local pauseButton = inforLayer:getChildByName("pauseButton")
            pauseButton:setVisible(false)
            local settleView = app:createView("SettleView", self.name, self.score)
            audio.playEffectSync(self.sound.shipDestroyEffect)
            self.plain:setVisible(false)
            settleView:addTo(self)
            self.isEnd = true
        end
        return true
    end)
    self:scheduleUpdate()
end

---method
---

function BaseGameScene:createGame()

    local width, height = display.width, display.height

    local gameLayer = ccui.Layout:create()
    gameLayer:setContentSize(width, height - 300)
    gameLayer:setPosition(0, 0)
    gameLayer:setBackGroundColorType(3)
    gameLayer:setName("gameLayer")
    self:addChild(gameLayer)
    gameLayer:setNodeEventEnabled(true)
    gameLayer:addNodeEventListener(cc.NODE_TOUCH_EVENT, function(event)
        if event.name == "began" then
            return true
        elseif event.name == "ended" then
            self.plain:setDes(event.x)
            return true
        end
    end)
    gameLayer:setTouchEnabled(true)
    gameLayer:addChild(self.plain)
end
function BaseGameScene:createBackground()
    local width, height = display.width, display.height
    local backLayer = display.newColorLayer(cc.c4b(0, 0, 0, 0))
    backLayer:setContentSize(width, height)
    backLayer:setName("backLayer")
    backLayer:setPosition(0, 0)

    local sprite1 = display.newScale9Sprite(self.backGroundLocation.back,0,0,cc.size(width, height))
    sprite1:setContentSize(width, height)
    sprite1:setAnchorPoint(0, 1)
    sprite1:setPosition(0, height)
    sprite1:setName("back1")
    backLayer:addChild(sprite1)

    local sprite2 = display.newScale9Sprite(self.backGroundLocation.back,0,0,cc.size(width, height))
    sprite2:setContentSize(width, height)
    sprite2:setAnchorPoint(0, 0)
    sprite2:setPosition(0, height)
    sprite2:setName("back2")
    backLayer:addChild(sprite2)

    self:addChild(backLayer)
end
function BaseGameScene:createInforLayer()


    local width, height = display.width, display.height
    local inforLayer = ccui.Layout:create()
    inforLayer:setContentSize(width, height)
    inforLayer:setPosition(0, 0)
    inforLayer:setBackGroundColorType(3)
    inforLayer:setName("inforLayer")
    --pauseButton

    local pauseButton = ccui.Button:create(self.layerImageLocation.pause, self.layerImageLocation.pause)
    pauseButton:setAnchorPoint(0, 1)
    pauseButton:setContentSize(40, 40)
    pauseButton:setPosition(0, height - 10)
    pauseButton:setName("pauseButton")
    pauseButton:addTouchEventListener(function(sender, eventType)
        if eventType == 2 then
            audio.playEffectSync(self.sound.buttonEffect)
            pauseButton:setVisible(false)
            cc.Director:getInstance():pause()
            app:createView("PauseView"):addTo(self)
            return true
        end
    end)
    inforLayer:addChild(pauseButton)
    --life label
    local spriteLife = display.newScale9Sprite(self.layerImageLocation.life, 0, 0, cc.size(50, 28))
    spriteLife:setAnchorPoint(0, 1)
    spriteLife:setPosition(width * .5, height - 10)
    inforLayer:addChild(spriteLife)

    --life
    local lifeValue = ccui.TextBMFont:create(tostring(self.life), self.layerImageLocation.bmFont)
    lifeValue:setScale(0.5, 0.5)
    lifeValue:setAnchorPoint(0, 1)
    lifeValue:setPosition(width* .5 + 55, height - 15)
    lifeValue:setName("lifeValue")
    inforLayer:addChild(lifeValue)

    --score label
    local spriteScore = display.newScale9Sprite(self.layerImageLocation.score, 0, 0, cc.size(50, 28))
    spriteScore:setAnchorPoint(0, 1)
    spriteScore:setPosition(width * .5 + 130, height - 10)
    inforLayer:addChild(spriteScore)

    --score
    local scoreValue = ccui.TextBMFont:create(tostring(self.score), self.layerImageLocation.bmFont)
    scoreValue:setScale(0.5,0.5)
    scoreValue:setAnchorPoint(0, 1)
    scoreValue:setPosition(width* .5 + 185, height - 15)
    scoreValue:setName("scoreValue")
    inforLayer:addChild(scoreValue)
    --
    self:addChild(inforLayer)

end

return BaseGameScene